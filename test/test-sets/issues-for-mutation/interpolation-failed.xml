<?xml version="1.0" ?>

<!-- This file is part of CPAchecker, -->
<!-- a tool for configurable software verification: -->
<!-- https://cpachecker.sosy-lab.org -->
<!-- -->
<!-- SPDX-FileCopyrightText: 2022 Dirk Beyer <https://www.sosy-lab.org> -->
<!-- -->
<!-- SPDX-License-Identifier: Apache-2.0 -->

<!--
CPAchecker crashes on these input files (that means, these programs are failing tests).
These programs are used to test CFA mutator when it tries to make minimal failing test.
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 2.3//EN" "https://www.sosy-lab.org/benchexec/benchmark-2.3.dtd">
<benchmark hardtimelimit="1000" timelimit="900" tool="cpachecker">
    <option name="-setprop">cfaMutation=true</option>
    <option name="-setprop">cfaMutation.checkAfterRollback=true</option>

    <option name="-setprop">cfa.export.toDot=true</option>
    <option name="-setprop">cfa.export.toDot.perFunction=true</option>
    <option name="-setprop">cfa.export.toC=true</option>
    <option name="-setprop">cfa.serialize=true</option>


	<rundefinition name="IMC">
		<option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
		<option name="-bmc-interpolation"/>
		<option name="-setprop">imc.fallBack=false</option>
		<option name="-setprop">cfa.transformIntoSingleLoop=true</option>
	</rundefinition>

	<rundefinition name="Predicate-Abstraction">
		<option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
		<option name="-predicateAnalysis"/>
	</rundefinition>

	<rundefinition name="Impact">
		<option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
		<option name="-predicateAnalysis-ImpactRefiner-ABEl"/>
	</rundefinition>

	<tasks name="issue-992">
		<include>../../programs/benchmarks/array-industry-pattern/array_shadowinit.i</include>
		<include>../../programs/benchmarks/array-tiling/mbpr2.c</include>
		<include>../../programs/benchmarks/array-multidimensional/init-non-constant-2-n-u.c</include>
		<include>../../programs/benchmarks/array-patterns/array1_pattern.c</include>
		<include>../../programs/benchmarks/array-cav19/array_init_var_plus_ind.c</include>
		<include>../../programs/benchmarks/array-fpi/eqn1.c</include>
		<include>../../programs/benchmarks/openssl/s3_clnt.blast.01.i.cil-1.c</include>
		<include>../../programs/benchmarks/floats-cbmc-regression/float18.i</include>
		<include>../../programs/benchmarks/float-benchs/Muller_Kahan.c</include>
		<include>../../programs/benchmarks/float-benchs/Muller_Kahan.c.p+cfa-reducer.c</include>
		<include>../../programs/benchmarks/float-benchs/sqrt_Householder_constant.c.p+cfa-reducer.c</include>
		<include>../../programs/benchmarks/floats-esbmc-regression/digits_bad_for.c</include>
		<include>../../programs/benchmarks/loop-floats-scientific-comp/loop1-1.c</include>
		<include>../../programs/benchmarks/list-properties/alternating_list-1.i</include>
		<include>../../programs/benchmarks/forester-heap/dll-rb-cnstr_1-1.i</include>
		<include>../../programs/benchmarks/loops/eureka_01-1.c</include>
		<include>../../programs/benchmarks/nla-digbench-scaling/freire1_valuebound10.c</include>
		<propertyfile>../../programs/benchmarks/properties/unreach-call.prp</propertyfile>
	</tasks>

</benchmark>
